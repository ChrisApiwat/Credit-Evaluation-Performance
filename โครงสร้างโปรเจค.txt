‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tibero ‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô Excel ‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á GitLab ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡πÑ‡∏õ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á Dashboard ‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏ö ‡∏ú‡∏°‡∏Ç‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:

1. ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
bash
Copy
Edit
/tibero_data_pipeline/
‚îÇ‚îÄ‚îÄ scripts/
‚îÇ   ‚îú‚îÄ‚îÄ fetch_data.py        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tibero ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel
‚îÇ   ‚îú‚îÄ‚îÄ process_data.py      # ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
‚îÇ   ‚îú‚îÄ‚îÄ upload_gitlab.py     # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ GitLab
‚îÇ‚îÄ‚îÄ dashboard/
‚îÇ   ‚îú‚îÄ‚îÄ app.py               # Streamlit app ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á Dashboard
‚îÇ‚îÄ‚îÄ .gitlab-ci.yml           # GitLab CI/CD ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
‚îÇ‚îÄ‚îÄ requirements.txt         # ‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies
‚îÇ‚îÄ‚îÄ config.py                # ‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
2. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:

sh
Copy
Edit
pip install pandas cx_Oracle openpyxl streamlit gitpython
3. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tibero ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel
‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå fetch_data.py

python
Copy
Edit
import pandas as pd
import cx_Oracle

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
TNS = "(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=your_host)(PORT=your_port)))(CONNECT_DATA=(SID=your_sid)))"
USERNAME = "your_user"
PASSWORD = "your_password"

def fetch_data():
    conn = cx_Oracle.connect(USERNAME, PASSWORD, TNS)
    query = "SELECT * FROM your_table"
    df = pd.read_sql(query, conn)
    conn.close()

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel
    file_name = "Evaluation_List.xlsx"
    df.to_excel(file_name, index=False)
    print(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå {file_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

if __name__ == "__main__":
    fetch_data()
4. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ GitLab
‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå upload_gitlab.py

python
Copy
Edit
import git
import os
import shutil

REPO_PATH = "/path/to/your/gitlab-repo"
FILE_NAME = "Evaluation_List.xlsx"

def upload_to_gitlab():
    repo = git.Repo(REPO_PATH)
    file_path = os.path.join(REPO_PATH, FILE_NAME)
    
    # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏ó‡∏µ‡πà repo
    shutil.copy(FILE_NAME, file_path)

    # Push ‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏∂‡πâ‡∏ô GitLab
    repo.git.add(FILE_NAME)
    repo.git.commit(m=f"Update {FILE_NAME}")
    repo.git.push()
    print(f"‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î {FILE_NAME} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á GitLab ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

if __name__ == "__main__":
    upload_to_gitlab()
5. ‡∏™‡∏£‡πâ‡∏≤‡∏á Dashboard ‡∏î‡πâ‡∏ß‡∏¢ Streamlit
‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå app.py ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå dashboard

python
Copy
Edit
import pandas as pd
import streamlit as st

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel ‡πÉ‡∏ô GitLab
FILE_NAME = "Evaluation_List.xlsx"

st.title("üìä Evaluation Dashboard")

@st.cache_data
def load_data():
    return pd.read_excel(FILE_NAME)

df = load_data()
st.dataframe(df)
‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:

sh
Copy
Edit
streamlit run dashboard/app.py
6. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GitLab CI/CD
‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .gitlab-ci.yml

yaml
Copy
Edit
stages:
  - fetch
  - process
  - upload

fetch_data:
  stage: fetch
  script:
    - python scripts/fetch_data.py

upload_gitlab:
  stage: upload
  script:
    - python scripts/upload_gitlab.py
7. ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô GitLab
‡∏ï‡∏±‡πâ‡∏á Schedule Pipeline ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô 20:50 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà
‡∏ï‡∏±‡πâ‡∏á Backup ‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
‡∏™‡∏£‡∏∏‡∏õ
‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tibero ‚Üí fetch_data.py
‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Excel ‡πÅ‡∏•‡∏∞ GitLab ‚Üí upload_gitlab.py
Streamlit ‡πÅ‡∏™‡∏î‡∏á Dashboard ‚Üí app.py
‡πÉ‡∏ä‡πâ GitLab CI/CD ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‚Üí .gitlab-ci.yml


‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tibero ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ GitLab ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (Auto) ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ GitLab CI/CD ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ï‡∏±‡πâ‡∏á Cron Job ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå

1. ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
bash
Copy
Edit
/tibero_data_pipeline/
‚îÇ‚îÄ‚îÄ scripts/
‚îÇ   ‚îú‚îÄ‚îÄ fetch_data.py        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tibero ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel
‚îÇ   ‚îú‚îÄ‚îÄ upload_gitlab.py     # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ GitLab
‚îÇ‚îÄ‚îÄ .gitlab-ci.yml           # GitLab CI/CD ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
‚îÇ‚îÄ‚îÄ requirements.txt         # ‡πÑ‡∏ü‡∏•‡πå dependencies
‚îÇ‚îÄ‚îÄ config.py                # ‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Tibero
2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tibero ‡πÅ‡∏ö‡∏ö Auto
‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå scripts/fetch_data.py

python
Copy
Edit
import pandas as pd
import cx_Oracle
import datetime

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Tibero
TNS = "(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=your_host)(PORT=your_port)))(CONNECT_DATA=(SID=your_sid)))"
USERNAME = "your_user"
PASSWORD = "your_password"

# ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡∏°‡∏µ timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
FILE_NAME = f"Evaluation_List_{timestamp}.xlsx"

def fetch_data():
    try:
        conn = cx_Oracle.connect(USERNAME, PASSWORD, TNS)
        query = "SELECT * FROM your_table"
        df = pd.read_sql(query, conn)
        conn.close()

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel
        df.to_excel(FILE_NAME, index=False)
        print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå {FILE_NAME} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        return FILE_NAME
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return None

if __name__ == "__main__":
    fetch_data()
3. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ GitLab ‡πÅ‡∏ö‡∏ö Auto
‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå scripts/upload_gitlab.py

python
Copy
Edit
import git
import os
import shutil

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GitLab Repo
REPO_PATH = "/path/to/your/gitlab-repo"

def upload_to_gitlab(file_name):
    repo = git.Repo(REPO_PATH)
    file_path = os.path.join(REPO_PATH, file_name)
    
    # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á Repo
    shutil.copy(file_name, file_path)

    # Push ‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏∂‡πâ‡∏ô GitLab
    repo.git.add(file_name)
    repo.git.commit(m=f"Update {file_name}")
    repo.git.push()
    print(f"üöÄ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î {file_name} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á GitLab ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

if __name__ == "__main__":
    # ‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å fetch_data.py
    from fetch_data import fetch_data
    file_name = fetch_data()
    if file_name:
        upload_to_gitlab(file_name)
4. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GitLab CI/CD ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô Auto
‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .gitlab-ci.yml

yaml
Copy
Edit
stages:
  - fetch
  - upload

fetch_data:
  stage: fetch
  script:
    - pip install -r requirements.txt
    - python scripts/upload_gitlab.py
  only:
    - main
  schedule:
    - cron: "50 20 * * *"  # ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 20:50 (UTC)
üìå ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ GitLab ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 20:50
‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏∞‡∏°‡∏µ timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
‚úÖ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πà‡∏≤ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î git rm

5. ‡∏ï‡∏±‡πâ‡∏á Cron Job ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ GitLab CI/CD)
‡∏ñ‡πâ‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Cron Job ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô upload_gitlab.py ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

sh
Copy
Edit
crontab -e
‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ (‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 20:50)

sh
Copy
Edit
50 20 * * * cd /path/to/tibero_data_pipeline && /usr/bin/python3 scripts/upload_gitlab.py
üîπ ‡∏™‡∏£‡∏∏‡∏õ
‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Tibero Auto ‚Üí fetch_data.py
‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel ‚Üí ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ timestamp
‚úÖ Push ‡∏Ç‡∏∂‡πâ‡∏ô GitLab Auto ‚Üí upload_gitlab.py
‚úÖ ‡∏ï‡∏±‡πâ‡∏á CI/CD ‡∏ö‡∏ô GitLab ‡∏´‡∏£‡∏∑‡∏≠ Cron Job ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤

üîª ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏°? ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏µ‡∏Å? üòä